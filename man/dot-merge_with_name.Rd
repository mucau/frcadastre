% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/idu.R
\name{.merge_with_name}
\alias{.merge_with_name}
\title{Merge two data frames and rename a column}
\usage{
.merge_with_name(x, df, ref_x, ref_y, ini_col, fin_col)
}
\arguments{
\item{x}{A \code{data.frame} containing the primary data.}

\item{df}{A \code{data.frame} containing the lookup or join data.}

\item{ref_x}{Name of the column in \code{x} to use as the join key.}

\item{ref_y}{Name of the column in \code{df} to use as the join key.}

\item{ini_col}{Name of the column in \code{df} to extract and rename.}

\item{fin_col}{New name to assign to \code{ini_col} in the output.}
}
\value{
A \code{data.frame} containing all rows from \code{x} and the matched
values from \code{df}, with \code{ini_col} renamed to \code{fin_col}.
}
\description{
Internal helper function to merge two data frames on specified key columns
and rename a target column in the joined result.
}
\details{
The function:
\enumerate{
\item Checks that \code{ini_col} exists in \code{df}.
\item Performs a left join of \code{x} with \code{df} using
\code{merge()}, matching \code{ref_x} with \code{ref_y}.
\item Selects only the join key (\code{ref_y}) and \code{ini_col}
from \code{df}.
\item Renames \code{ini_col} in the result to \code{fin_col}.
}
}
\examples{
\dontrun{
df1 <- data.frame(id = 1:3, value = letters[1:3])
df2 <- data.frame(key = 1:3, original = c("A", "B", "C"))

.merge_with_name(df1, df2, "id", "key", "original", "renamed")
}

}
\keyword{internal}
