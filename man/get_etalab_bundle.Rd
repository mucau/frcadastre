% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_etalab_bundle.R
\name{get_etalab_bundle}
\alias{get_etalab_bundle}
\title{Download a single cadastre dataset from Etalab "bundle" API}
\usage{
get_etalab_bundle(id, data = "parcelles")
}
\arguments{
\item{id}{\code{character} or \code{numeric}
The identifier used by the API to retrieve cadastre data. In most cases,
this corresponds to an INSEE code for a commune.}

\item{data}{\code{character} (default: \code{"parcelles"})
The dataset to download. Must be one of the valid processed dataset names
(\code{proc_data}) as defined in \code{\link[=cfg_get_data]{cfg_get_data()}}.
Examples include \code{"parcelles"}, \code{"sections"}, \code{"communes"}, \code{"batiments"}, etc.}
}
\value{
An \code{sf} object containing the geometries for the requested dataset.
If multiple files are returned, they are bound row-wise into a single object.
If no valid data is retrieved, the function returns \code{NULL} with a warning.
}
\description{
This function downloads a specific dataset layer (e.g., \code{"parcelles"}) for a
given identifier (commonly an INSEE code) using the Etalab "bundle" API. The
data are returned as an \code{sf} object. If multiple files are retrieved (e.g.
due to subdivision by the API), they are combined into a single \code{sf} object
with harmonized columns.
}
\details{
The function works as follows:
\enumerate{
\item The \code{layer} argument is validated against available processed dataset names.
\item The appropriate API URL is built for the given \code{id}, automatically detecting
the scale (commune vs d√©partement) using \code{\link[=cdg_detect_insee_code]{cdg_detect_insee_code()}}.
\item Each URL is read using \code{\link[sf:st_read]{sf::st_read()}}. Invalid or failed reads are skipped.
\item All successfully read \code{sf} objects are combined with \code{rbind}.
\item The \code{"idu"} field (unique parcel identifier) is renamed consistently with
\code{\link[=idu_rename_in_df]{idu_rename_in_df()}}.
}

The data are always retrieved in \strong{GeoJSON} format.
}
\examples{
\dontrun{
# Download parcel geometries for commune 72188
parcelles <- get_etalab_bundle("72188", data = "parcelles")

# Download sections geometries
sections <- get_etalab_bundle("72188", data = "sections")

# Attempt with an invalid data will throw an error
get_etalab_bundle("72188", data = "foo")
}

}
