% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_cadastre_pci.R
\name{get_cadastre_pci}
\alias{get_cadastre_pci}
\title{Download and Extract PCI Cadastre Data for Given Communes and Sheets}
\usage{
get_cadastre_pci(
  communes,
  feuilles = NULL,
  format = c("edigeo", "dxf"),
  extract_dir = NULL,
  overwrite = TRUE,
  ...
)
}
\arguments{
\item{communes}{\code{character}
vector of commune codes or names to download data for.}

\item{feuilles}{\code{character}
vector of sheet identifiers to filter (optional).}

\item{format}{\code{character}
string specifying the format to download and read. Either \code{"edigeo"} or \code{"dxf"}.}

\item{extract_dir}{\code{character}
path to the directory where archives will be extracted. Defaults to temporary directory.}

\item{overwrite}{\code{logical}
indicating whether to overwrite existing downloaded or extracted files. Default is \code{FALSE}.}

\item{...}{additional arguments passed to the URL retrieval function.}
}
\value{
A list of \code{sf} objects or a single \code{sf} object
containing all the spatial layers read from the extracted files,
depending on the format and data structure.
}
\description{
This function downloads PCI cadastre archives for specified communes and optionally sheets,
extracts all files into a single directory, and reads the spatial data into an \code{sf} object or list of \code{sf}.
}
\details{
The function first retrieves download URLs for the requested communes and sheets,
then downloads and extracts all archive files into the specified extraction directory.
Finally, it reads all spatial layers from the extracted data and returns them as \code{sf} objects.
}
\examples{
\dontrun{
# Download and read Edigeo format for communes "12345" and "67890"
data_sf <- get_cadastre_pci(communes = c("12345", "67890"), format = "edigeo")
}
}
\seealso{
\code{\link[=pci_get_feuille_urls(), cdg_download_archives(), read_edigeo(), read_dxf]{pci_get_feuille_urls(), cdg_download_archives(), read_edigeo(), read_dxf()}}
}
